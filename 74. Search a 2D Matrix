class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int rowHigh= matrix.length-1;
        int rowLow= 0;
        int colHigh= matrix[0].length-1;
        int colLow= 0;
        while(rowLow<=rowHigh) {
            int rowMid= (rowHigh+rowLow)/2;
            if(matrix[rowMid][0]<=target && matrix[rowMid][matrix[rowMid].length-1]>=target) {
                return findBinary(0,matrix[rowMid].length - 1,matrix[rowMid],target);
            }
            else if(matrix[rowMid][0]>target) rowHigh= rowMid-1;
            else rowLow= rowMid+1;
        }
        return false;
    }
    boolean findBinary(int low,int high, int[] row, int target)
        {
            while(low<=high) {
            int mid= (low+high)/2;
                if(row[mid]==target) return true;
                else if(target>row[mid]) low=mid+1;
                else high=mid-1;
            }
            return false;
        }
}
